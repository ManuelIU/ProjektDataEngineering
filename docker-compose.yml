services:
  minio:
    image: docker.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - airflow
    restart: unless-stopped
  
  spark-master:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile.spark
    image: spark-master
    container_name: spark-master
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
      --host spark-master
      --port 7077
      --webui-port 8081
    ports:
      - "7077:7077"
      - "8081:8081"
    depends_on:
      - minio
    volumes:
      - ./spark_tasks:/opt/airflow/spark_tasks
      - ./data:/opt/airflow/data
    networks:
      - airflow
    restart: unless-stopped

  spark-worker:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile.spark
    image: spark-worker
    container_name: spark-worker
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker
      spark://spark-master:7077
      --webui-port 8082
    depends_on:
      - spark-master
    volumes:
      - ./spark_tasks:/opt/airflow/spark_tasks
      - ./data:/opt/airflow/data
    networks:
      - airflow
    restart: unless-stopped

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: dataEngineering_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - airflow
    restart: unless-stopped

  airflow:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile.airflow
    image: pde-airflow
    container_name: airflow
    depends_on:
      - spark-master
      - spark-worker
      - minio
      - postgres
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./ingestion:/opt/airflow/ingestion
      - ./spark_tasks:/opt/airflow/spark_tasks
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db init &&
          airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
          airflow webserver & airflow scheduler"
    networks:
      - airflow
    restart: unless-stopped


volumes:
  minio_data:
    driver: local
  pgdata:
    driver: local

networks:
  airflow:
    driver: bridge